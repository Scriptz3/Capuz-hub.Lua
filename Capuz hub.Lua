local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Capuz Hub",
    SubTitle = "by Scriptz3",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Abas com emojis
local Tabs = {
    Main = Window:AddTab({ Title = "Main" }),
    Speed = Window:AddTab({ Title = "‚ö° Velocidade" }),  -- Emoji de raio ao lado de "Velocidade"
    Teleport = Window:AddTab({ Title = "‚≠ê Teleporte" }),  -- Emoji de estrela ao lado de "Teleporte"
    Troll = Window:AddTab({ Title = "üíÄ Troll" })  -- Renomeado de "Kill" para "Troll" e emoji de caveira
}

-- Notifica√ß√£o inicial
Fluent:Notify({
    Title = "Bem-vindo",
    Content = "O Capuz Hub foi carregado.",
    Duration = 5
})

-- Fun√ß√£o para alterar a velocidade de tpwalk
local function SetTpwalkSpeed(value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
    print("Velocidade ajustada para Tpwalk " .. value)
end

-- Adicionando as op√ß√µes de velocidade (Tpwalk 2, Tpwalk 3, etc.) na aba "Velocidade"
local SpeedOptions = {2, 3, 4, 5, 10, 50, 100, 200, 500}

for _, speed in ipairs(SpeedOptions) do
    Tabs.Speed:AddButton({
        Title = "Tpwalk " .. speed,
        Callback = function()
            SetTpwalkSpeed(speed)
        end
    })
end

-- Fun√ß√£o para teleportar para um jogador
local function TeleportToPlayer(player)
    local character = game.Players.LocalPlayer.Character
    if character and player.Character then
        character:MoveTo(player.Character.HumanoidRootPart.Position)
        print("Teleported to " .. player.Name)
    else
        print("Erro ao teleportar para " .. player.Name)
    end
end

-- Fun√ß√£o para verificar se o jogador est√° sentado no carrinho
local function IsPlayerInCart(player)
    local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        for _, vehicle in pairs(workspace:GetChildren()) do
            if vehicle:IsA("Model") and vehicle:FindFirstChild("Seat") then
                local seat = vehicle.Seat
                if seat.Occupant == humanoid then
                    return true, vehicle
                end
            end
        end
    end
    return false
end

-- Fun√ß√£o para enviar o jogador e o carrinho para o "void"
local function SendToVoid(player, vehicle)
    -- Teleportando o jogador
    local char = player.Character
    if char then
        local humanoidRootPart = char:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = CFrame.new(0, -5000, 0)  -- Teleporta para o "void"
        end
    end

    -- Teleportando o carrinho
    if vehicle and vehicle:FindFirstChild("HumanoidRootPart") then
        vehicle.HumanoidRootPart.CFrame = CFrame.new(0, -5000, 0)  -- Teleporta o carrinho para o "void"
    end
end

-- Fun√ß√£o para manter o jogador "preso" ao alvo
local function StickToPlayer(targetPlayer)
    local character = game.Players.LocalPlayer.Character
    local targetCharacter = targetPlayer.Character

    if character and targetCharacter then
        -- Fica "preso" ao alvo
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
        local playerHRP = character:FindFirstChild("HumanoidRootPart")

        if targetHRP and playerHRP then
            -- Atualiza a posi√ß√£o do jogador com o alvo
            while targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
                playerHRP.CFrame = targetHRP.CFrame
                wait(0.1)  -- Ajuste do tempo, para n√£o causar delay
            end
        end
    end
end

-- Fun√ß√£o para seguir um jogador
local function FollowPlayer(targetPlayer)
    local character = game.Players.LocalPlayer.Character
    local targetCharacter = targetPlayer.Character

    if character and targetCharacter then
        -- Atualiza a posi√ß√£o para seguir o jogador alvo
        while targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
            local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                character:MoveTo(targetHRP.Position)
            end
            wait(0.5)  -- Ajuste do tempo para n√£o sobrecarregar a movimenta√ß√£o
        end
    end
end

-- Fun√ß√£o para ver um jogador
local function ViewPlayer(targetPlayer)
    local character = game.Players.LocalPlayer.Character
    local targetCharacter = targetPlayer.Character

    if character and targetCharacter then
        -- Alinha o personagem para ver o jogador alvo
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            character:SetPrimaryPartCFrame(targetHRP.CFrame)
        end
    end
end

-- Fun√ß√£o para atualizar a lista de jogadores
local function UpdatePlayerList()
    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
        if targetPlayer ~= game.Players.LocalPlayer then
            Tabs.Troll:AddButton({
                Title = targetPlayer.Name,
                Callback = function()
                    -- Exibe as op√ß√µes para o jogador selecionado
                    local subMenu = Tabs.Troll:AddSection({
                        Title = "Kill Player",
                        List = true
                    })

                    subMenu:AddButton({
                        Title = "Follow",
                        Callback = function()
                            FollowPlayer(targetPlayer)
                        end
                    })

                    subMenu:AddButton({
                        Title = "Goto",
                        Callback = function()
                            TeleportToPlayer(targetPlayer)
                        end
                    })

                    subMenu:AddButton({
                        Title = "View",
                        Callback = function()
                            ViewPlayer(targetPlayer)
                        end
                    })

                    subMenu:AddButton({
                        Title = "Reset List",
                        Callback = function()
                            UpdatePlayerList()
                        end
                    })
                end
            })
        end
    end
end

-- Inicializando a lista de jogadores
UpdatePlayerList()

-- Fun√ß√£o para abrir e minimizar a lista de jogadores
local isPlayerListVisible = false
local function TogglePlayerList()
    isPlayerListVisible = not isPlayerListVisible
    if isPlayerListVisible then
        UpdatePlayerList()
    else
        Tabs.Troll:Clear()
    end
end

-- Adicionando o bot√£o "Player list" na sess√£o Troll
Tabs.Troll:AddButton({
    Title = "Player list",
    Callback = TogglePlayerList
})

-- Configura√ß√£o dos gerenciadores
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Constru√ß√£o da interface
InterfaceManager:SetFolder("CapuzHub")
SaveManager:SetFolder("CapuzHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Main)
InterfaceManager:BuildInterfaceSection(Tabs.Speed)
InterfaceManager:BuildInterfaceSection(Tabs.Teleport) -- Adiciona a sess√£o Teleporte
InterfaceManager:BuildInterfaceSection(Tabs.Troll) -- Adiciona a sess√£o Troll
SaveManager:BuildConfigSection(Tabs.Main)

-- Seleciona a aba principal
Window:SelectTab(1)

Fluent:Notify({
    Title = "Capuz Hub",
    Content = "A interface foi carregada.",
    Duration = 8
})

-- Salvando configura√ß√µes
SaveManager:LoadAutoloadConfig()

-- Criando o bot√£o flutuante
local FloatingButton = Instance.new("TextButton")
FloatingButton.Size = UDim2.fromOffset(100, 50)
FloatingButton.Position = UDim2.new(0.5, -50, 0.1, 0)  -- Centralizado na parte superior
FloatingButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Cor de fundo do bot√£o
FloatingButton.Text = "Cpz Hb"  -- Texto do bot√£o
FloatingButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Cor do texto
FloatingButton.Font = Enum.Font.SourceSans
FloatingButton.TextSize = 24
FloatingButton.Parent = game.CoreGui

-- Fun√ß√£o para alternar a visibilidade do Hub
local isHubVisible = true  -- Flag para controlar a visibilidade do Hub

local function ToggleHubVisibility()
    if isHubVisible then
        Window:Hide()  -- Esconde o Hub
    else
        Window:Show()  -- Mostra o Hub
    end
    isHubVisible = not isHubVisible  -- Alterna o estado da visibilidade
end

-- Conectando o clique no bot√£o flutuante
FloatingButton.MouseButton1Click:Connect(ToggleHubVisibility)
